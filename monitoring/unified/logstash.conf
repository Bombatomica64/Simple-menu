input {
  beats {
    port => 5044
  }
  
  # Direct input from applications
  tcp {
    port => 5000
    codec => json
  }
  
  udp {
    port => 5000
    codec => json
  }
}

filter {
  # Add container metadata if available
  if [docker][container][name] {
    mutate {
      add_field => { "container_name" => "%{[docker][container][name]}" }
    }
  }
  
  # Parse JSON logs from Simple Menu application
  if [container_name] =~ /simple-menu/ or [container_name] =~ /backend/ or [container_name] =~ /frontend/ {
    if [message] =~ /^\{/ {
      json {
        source => "message"
      }
    }
  }
  
  # Add timestamp if missing
  if ![timestamp] {
    mutate {
      add_field => { "timestamp" => "%{@timestamp}" }
    }
  }
  
  # Tag logs by source
  if [container_name] =~ /backend/ {
    mutate {
      add_tag => ["simple-menu", "backend", "nodejs"]
    }
  } else if [container_name] =~ /frontend/ {
    mutate {
      add_tag => ["simple-menu", "frontend", "nginx"]
    }
  } else if [container_name] =~ /prometheus/ {
    mutate {
      add_tag => ["monitoring", "prometheus"]
    }
  } else if [container_name] =~ /grafana/ {
    mutate {
      add_tag => ["monitoring", "grafana"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["elasticsearch:9200"]
    index => "simple-menu-logs-%{+YYYY.MM.dd}"
    template_name => "simple-menu"
    template_pattern => "simple-menu-*"
    template => {
      "index_patterns" => ["simple-menu-*"]
      "settings" => {
        "number_of_shards" => 1
        "number_of_replicas" => 0
      }
      "mappings" => {
        "properties" => {
          "@timestamp" => {
            "type" => "date"
          }
          "message" => {
            "type" => "text"
          }
          "level" => {
            "type" => "keyword"
          }
          "container_name" => {
            "type" => "keyword"
          }
          "tags" => {
            "type" => "keyword"
          }
        }
      }
    }
  }
  
  # Debug output (remove in production)
  stdout {
    codec => rubydebug {
      metadata => false
    }
  }
}
