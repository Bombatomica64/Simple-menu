server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html;

    # Enable error logging for debugging
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;

    # Set buffer sizes for better performance on Pi
    client_body_buffer_size 16K;
    client_header_buffer_size 1k;
    client_max_body_size 8m;
    large_client_header_buffers 2 1k;

    # Timeout configurations for stability
    client_body_timeout 12;
    client_header_timeout 12;
    keepalive_timeout 15;
    send_timeout 10;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;

    # Health check endpoint for Docker
    location /health {
        access_log off;
        return 200 'healthy\n';
        add_header Content-Type text/plain;
    }

    # Handle Angular routing with better error handling
    location / {
        try_files $uri $uri/ @fallback;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Fallback for Angular routing
    location @fallback {
        try_files /index.html =404;
    }

    # Cache static assets with better error handling
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;

        # Fallback for missing assets
        try_files $uri =404;

        # CORS headers for fonts and assets
        add_header Access-Control-Allow-Origin *;
    }

    # API proxy with error handling (if needed for development)
    location /api/ {
        proxy_pass http://backend:3000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Error handling for backend connectivity
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;

        # Fallback when backend is unavailable
        error_page 502 503 504 @backend_fallback;
    }

    # Backend fallback when API is unavailable
    location @backend_fallback {
        return 503 '{"error": "Backend service temporarily unavailable", "message": "Please try again in a few moments"}';
        add_header Content-Type application/json always;
    }

    # WebSocket proxy for menu updates
    location /menu-updates {
        proxy_pass http://backend:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket specific timeouts
        proxy_connect_timeout 7s;
        proxy_send_timeout 10s;
        proxy_read_timeout 300s; # Allow long-lived connections

        # Disable buffering for real-time communication
        proxy_buffering off;
    }

    # Custom error pages
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}
